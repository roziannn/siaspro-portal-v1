generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String?
  roles     UserRole[]

  createdEvents    Event[]            @relation("UserCreatedEvents")
  eventParticipants EventParticipant[]
  
  createdJadwal   JadwalKuliah[] @relation("UserCreatedJadwal")
  updatedJadwal   JadwalKuliah[] @relation("UserUpdatedJadwal")


  createdAt DateTime   @default(now())
}

model Role {
  id    Int        @id @default(autoincrement())
  name  String     @unique
  users UserRole[]
}

model UserRole {
  id     Int   @id @default(autoincrement())

  user   User  @relation(fields: [userId], references: [id])
  userId Int

  role   Role  @relation(fields: [roleId], references: [id])
  roleId Int

  @@unique([userId, roleId])
}

model Event {
  id          Int       @id @default(autoincrement())
  jenis       String
  nama        String 
  tanggal     DateTime
  lokasi      String
  kuota       Int
  totalJoin   Int       @default(0)
  status      EventStatus  @default(OPEN)
  
  createdBy   User      @relation("UserCreatedEvents", fields: [createdById], references: [id])
  createdById Int

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  participants EventParticipant[]

  @@index([createdById])
}

model EventParticipant {
  id        Int     @id @default(autoincrement())
  event     Event   @relation(fields: [eventId], references: [id])
  eventId   Int

  user      User    @relation(fields: [userId], references: [id])
  userId    Int

  joinedAt  DateTime @default(now())

  @@unique([eventId, userId])
  @@index([eventId])
  @@index([userId])
}

enum EventStatus {
  OPEN
  ONGOING
  CLOSED
}

model JadwalKuliah {
  id          Int      @id @default(autoincrement())
  mataKuliah  String
  dosen       String
  ruangan     String
  hari        String
  jamMulai    String
  jamSelesai  String
  aktif       Boolean  @default(true)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  createdBy   User     @relation("UserCreatedJadwal", fields: [createdById], references: [id])
  createdById Int

  updatedBy   User     @relation("UserUpdatedJadwal", fields: [updatedById], references: [id])
  updatedById Int

  @@index([createdById])
  @@index([updatedById])
}

